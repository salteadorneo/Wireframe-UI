import { newSpecPage } from '@stencil/core/testing';
import { WfButton } from './wf-button';

describe('wf-button', () => {
    it('renders', async () => {
        const { root } = await newSpecPage({
            components: [WfButton],
            html: '<wf-button></wf-button>',
        });
        expect(root).toEqualHtml(`
      <wf-button>
        <mock:shadow-root>
          <button>
            <slot></slot>
          </button>
        </mock:shadow-root>
      </wf-button>
    `);
    });

    it('renders with values', async () => {
        const { root } = await newSpecPage({
            components: [WfButton],
            html: `<wf-button first="Stencil" last="'Don't call me a framework' JS"></wf-button>`,
        });
        expect(root).toEqualHtml(`
      <wf-button first="Stencil" last="'Don't call me a framework' JS">
        <mock:shadow-root>
          <div>
            Hello, World! I'm Stencil 'Don't call me a framework' JS
          </div>
        </mock:shadow-root>
      </wf-button>
    `);
    });
});
